local assert = require('luassert')

local path = require('go_to_test_file.path')
local system = require('go_to_test_file.system')
local peer_dunder_tests = require('go_to_test_file.peer_dunder_tests')
local helper = require('spec.helper')

describe('peer_dunder_tests', function()
  it('will find the test file of the file path passed in', function()
    local ps = path.separator(system.name())
    local fixture_project_root = path.join(ps, helper.fixtures_path(), 'fake-peer-dunder-tests-project')

    local test_folder = path.join(path.separator(system.name), fixture_project_root, 'src', '__tests__')
    local actual = peer_dunder_tests.find_test_file(test_folder, 'app.js')
    local expected = path.join(ps, test_folder, 'app.js')
    assert.are.equal(expected, actual)
  end)
  it('will find the src file of the file path passed in', function()
    local ps = path.separator(system.name())
    local fixture_project_root = path.join(ps, helper.fixtures_path(), 'fake-peer-dunder-tests-project')

    local src_folder = path.join(path.separator(system.name), fixture_project_root, 'src')
    local actual = peer_dunder_tests.find_source_file(src_folder, 'app.js')
    local expected = path.join(ps, src_folder, 'app.js')
    assert.are.equal(expected, actual)
  end)
  it('will find the tests folder from the source file folder', function()
    local ps = path.separator(system.name())
    local fixture_project_root = path.join(ps, helper.fixtures_path(), 'fake-peer-dunder-tests-project')

    local src_folder = path.join(path.separator(system.name), fixture_project_root, 'src')
    local actual = peer_dunder_tests.folder_tests_folder(src_folder)
    local expected = path.join(ps, src_folder, '__tests__')
    assert.are.equal(expected, actual)
  end)
end)
